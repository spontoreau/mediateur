name: "Release"

on:
  push:
    branches:
      - release/*

jobs:
  call-shared-workflow:
    uses: ./.github/workflows/shared-workflow.yml

  package-version:
    needs: call-shared-workflow
    runs-on: ubuntu-latest
    outputs:
      packageVersion: ${{ steps.package_version.outputs.packageVersion }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"
      - name: Set package version
        id: package_version
        run: |
          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
          BRANCH_VERSION=$(printf '%s\n' ${GIT_BRANCH//release\//})
          TAG_VERSION=$(git tag --list | sort -V | tail -n1)
          VERSION="$(export BRANCH_VERSION="${BRANCH_VERSION}" && TAG_VERSION="${TAG_VERSION}" && node .github/scripts/getVersion.js)"
          echo "${VERSION}"
          echo "packageVersion=${VERSION}" >> $GITHUB_OUTPUT

  publish-beta:
    needs: package-version
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.package-version.outputs.packageVersion }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: mediateur-package
      - name: Unpack artifact
        run: |
          tar zxvf mediateur-0.0.0.tgz
          mv ./package/* ./
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: 'https://registry.npmjs.org'
      - name: Set version in package.json
        run: |
          export PACKAGE_VERSION="${{ env.VERSION }}-beta.${{ github.sha }}" && node -p "JSON.stringify({...require('./package.json'), version: process.env.PACKAGE_VERSION})" > new-package.json
          rm -rf package.json
          mv new-package.json package.json
          cat package.json
      # - name: Publish beta version
      #   run: npm publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
